<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>记一次被freenom回收域名</title>
    <link href="/%E9%9A%8F%E7%AC%94/7541d838/"/>
    <url>/%E9%9A%8F%E7%AC%94/7541d838/</url>
    
    <content type="html"><![CDATA[<p>最初是想去博客看笔记,突然发现进不去了??<br>github出问题了?<br>被墙了?<br>DNS污染?<br>最后折腾了半天发现是我域名没了,然而这个域名离到期还有好一段时间…<br>去freenom查看原域名,发现已经变成Special了.<br><img src="//cdn.jsdelivr.net/gh/Rewrite0/FigureBed@master/2/photo_2021-04-26_17-13-47.jpg" alt="Special"><br>没办法,只能先转到我另一个域名上了<del>虽然也是freenom的免费域名</del><br>等想到好的域名,就转付费吧.<br><strong>果然免费的才是最贵的</strong></p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>freenom</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Telegram收发微信消息</title>
    <link href="/%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/c75532e9/"/>
    <url>/%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/c75532e9/</url>
    
    <content type="html"><![CDATA[<h1 id="EH-Forwarder-Bot-介绍"><a href="#EH-Forwarder-Bot-介绍" class="headerlink" title="EH Forwarder Bot 介绍"></a>EH Forwarder Bot 介绍</h1><p><a href="https://github.com/ehForwarderBot/ehForwarderBot">EH Forwarder Bot (EFB)</a>是一个可扩展的消息隧道聊天机器人框架，可在多个平台之间传递消息，并远程控制您的帐户。<br><span id="more"></span><br>总之就是用这个项目把微信的消息转发到Telegram，但是只用<a href="https://github.com/ehForwarderBot/ehForwarderBot">EFB</a>是不够的，要达到用Telegram收发微信，还需要<a href="https://github.com/ehForwarderBot/efb-telegram-master">efb-telegram-master(ETM)</a>以及<a href="https://github.com/blueset/efb-wechat-slave">efb-wechat-slave(EWS)</a></p><p><a href="https://ehforwarderbot.readthedocs.io/en/latest/">官方文档</a> <a href="https://github.com/ehforwarderbot/ehForwarderBot/wiki">官方wiki</a>  </p><h1 id="使用须知"><a href="#使用须知" class="headerlink" title="使用须知"></a>使用须知</h1><ol><li>微信号需要能够登录<a href="https://wx.qq.com/">微信网页版</a>,如果无法登录那么可以放弃了。</li><li>有用户报告会有微信网页版登录被腾讯封禁的情况，原话如下：<blockquote><p>自 2017 年中旬以来，陆续有用户报告其微信网页版登录被腾讯封禁。表现为用任何方式登录微信网页版提示「当前登录环境异常。为了你的账号安全，暂时不能登录 Web 微信。你可以通过手机客户端或 Windows 微信登录」或类似的提示。大部分用户会在封禁后一天到三个月内解封，不同用户的解封耗时不同。据观测，仅有约不足一成的用户在使用过程中被封禁。该封禁不影响其他客户端的登录。目前封禁的原因尚不明确。  </p><p>与此同时，有现象表明 2017 年中旬以来新注册的微信用户不能够使用微信网页版。在初次使用之前，请先访问微信网页版并确认您可以正常使用此功能。若您的账号不能使用该功能，请尝试换用其他账号尝试。  </p><p>如果你对网页版登录有要求的话，请慎用此信道。详细的相关信息请参见<a href="https://github.com/ehForwarderBot/efb-wechat-slave/issues/7">issue #7</a>。  </p></blockquote></li></ol><h1 id="部署教程"><a href="#部署教程" class="headerlink" title="部署教程"></a>部署教程</h1><blockquote><p>部署服务需要一个完整的Linux作为服务器，下面以Debian系发行版为例。</p></blockquote><h2 id="申请Telegram-bot"><a href="#申请Telegram-bot" class="headerlink" title="申请Telegram bot"></a>申请Telegram bot</h2><ul><li>在 <code>Telegram</code> 里 <code>@BotFather</code> 发起对话。&lt;/br&gt;</li><li>发送<code>/newbot</code>创建bot，期间需要指定bot的名称与用户名(用户名以bot结尾)。</li><li>创建完成后 <code>@BotFather</code> 会给你提供一串 <code>数字:英文</code> 形式如 <code>123123123:WERGadsgaeDFGAwetfGq</code> 的HTTP API，将其保存下来留做后续使用。<blockquote><p>请注意，为保护您的隐私及信息安全， 请不要向任何人提供你的 Bot 用户名及密钥，这可能导致聊天信息泄露等各种风险。</p></blockquote></li></ul><p>完事后需要对 bot 进行进一步配置。</p><ul><li>发送 <code>/setprivacy</code> 到 <code>@BotFather</code>，选择刚刚创建好的 Bot 用户名，然后选择 “Disable”。</li><li>发送 <code>/setjoingroups</code> 到 <code>@BotFather</code>，选择刚刚创建好的 Bot 用户名，然后选择 “Enable”。</li><li>发送 <code>/setcommands</code> 到 <code>@BotFather</code>，选择刚刚创建好的 Bot 用户名，然后发送如下内容：<figure class="highlight stata"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stata"><span class="hljs-keyword">help</span>-显示命令列表。<br>chat-生成聊天头。<br><span class="hljs-keyword">rm</span>-从其远程聊天中删除一条消息。<br>link-将远程聊天链接到群组。<br>unlink_all-取消群组中所有远程聊天的链接。<br>info-显示当前电报聊天的信息。<br>extra-从从通道访问其他功能。<br>update_info-链接的电报组的更新信息。<br></code></pre></div></td></tr></table></figure>到这里 Telegram bot 就创建完了，如果需要给 bot 设置一个头像，可以使用 <code>/setuserpic</code> 指令。</li></ul><h2 id="获取-Telegram-ID"><a href="#获取-Telegram-ID" class="headerlink" title="获取 Telegram ID"></a>获取 Telegram ID</h2><p>在 <code>Telegram</code> 上搜索 <code>@userinfobot</code> 点击 <code>/start</code> 即可获得你的 Telegram ID，一串数字（Chat ID）。</p><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><p>首先，你要有一台装有debian系发行版的vps，或者一台能装<code>完整Linux系统</code>的，<code>24h</code>不断电的，有稳定网络的设备作为服务器来部署服务  </p><blockquote><p>比如树莓派，或者一台能root的吃灰的安卓手机，通过Linux Deploy来安装linux发行版，理论上没有root也可以用Termux来安装完整Linux环境用来部署服务<del>禁止套娃</del>。  </p></blockquote><p>另外你的服务器需要能够访问外网，毕竟Telegram是需要外网访问的，如果你的服务器没有办法访问外网,<a href="https://github.com/ehForwarderBot/efb-telegram-master#run-etm-behind-a-proxy">ETM</a>也可以让我们指定代理运行，后续会提到。</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><ul><li>以下所有命令需要在<code>root</code>用户下执行，或使用<code>sudo</code>进行提权。<figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-comment"># 先更新一下</span><br><span class="hljs-attribute">apt</span> update -y &amp;&amp; apt upgrade -y<br><span class="hljs-comment"># 安装所需依赖和工具</span><br><span class="hljs-attribute">apt</span> install python<span class="hljs-number">3</span> python<span class="hljs-number">3</span>-pip python<span class="hljs-number">3</span>-setuptools python<span class="hljs-number">3</span>-yaml ffmpeg  libcairo<span class="hljs-number">2</span>-dev libcairo<span class="hljs-number">2</span> -y<br></code></pre></div></td></tr></table></figure></li></ul><h3 id="安装主体"><a href="#安装主体" class="headerlink" title="安装主体"></a>安装主体</h3><figure class="highlight cmake"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> ehforwarderbot efb-telegram-master efb-wechat-slave<br>pip3 <span class="hljs-keyword">install</span> --upgrade Pillow<br><span class="hljs-comment"># 可选插件，可以把tg的贴纸发送到微信，建议安装</span><br>pip3 <span class="hljs-keyword">install</span> <span class="hljs-string">&quot;efb-telegram-master[tgs]&quot;</span><br></code></pre></div></td></tr></table></figure><h3 id="EFB-配置文件"><a href="#EFB-配置文件" class="headerlink" title="EFB_配置文件"></a>EFB_配置文件</h3><p>创建<code>/etc/ehforwarderbot/profiles/wechat/config.yaml</code>，写入以下内容：<br><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts"><span class="hljs-symbol">master_channel:</span> blueset.telegram<br><span class="hljs-symbol">slave_channels:</span><br>- blueset.wechat<br><span class="hljs-meta">#flags部分为实验性功能,更多功能请查看文档：https:<span class="hljs-comment">//github.com/ehForwarderBot/efb-wechat-slave#实验功能</span></span><br><span class="hljs-symbol">flags:</span> <br><span class="hljs-symbol">  delete_on_edit:</span> true<br>  <span class="hljs-meta">#以撤回并重新发送的方式代替编辑消息</span><br></code></pre></div></td></tr></table></figure></p><h3 id="ETM-配置文件"><a href="#ETM-配置文件" class="headerlink" title="ETM_配置文件"></a>ETM_配置文件</h3><p>创建<code>/etc/ehforwarderbot/profiles/wechat/blueset.telegram/config.yaml</code>，写入以下内容：<br><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts"><span class="hljs-symbol">token:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-meta">#在<span class="hljs-string">&quot;&quot;</span>中间 填入你之前找botfather申请的api</span><br><span class="hljs-symbol">admins:</span><br>- <span class="hljs-number">1234</span> <span class="hljs-meta">#把数字修改为上面获取的个人 telegram id</span><br><span class="hljs-meta">#- 1279136259 #如果,想要多个tg账号都能使用,可在这里加入第二个id或者多个id,去掉开头的#</span><br><span class="hljs-meta">#flags部分为实验性功能,更多功能请查看文档：https:<span class="hljs-comment">//github.com/ehForwarderBot/efb-telegram-master#experimental-flags</span></span><br><span class="hljs-symbol">flags:</span><br><span class="hljs-symbol">  send_image_as_file:</span> true<br>  <span class="hljs-meta">#将所有图像消息作为文件发送,以防止主动报文的图像压缩.需要更多的流量,可以关闭,改为false</span><br><span class="hljs-symbol">  animated_stickers:</span> true<br>  <span class="hljs-meta">#启用对动画贴纸的实验性支持启用对动画贴纸的实验性支持,该依赖已包含在教程依赖</span><br><span class="hljs-symbol">  default_media_prompt:</span> text<br>  <span class="hljs-meta">#图片/视频/文件消息没有标题时的占位符文本.</span><br></code></pre></div></td></tr></table></figure><br><strong>注意！如果你的服务器无法访问外网，可以为ETM专门指定代理！只需要在<code>/etc/ehforwarderbot/profiles/wechat/blueset.telegram/config.yaml</code>文件底部加入以下内容：</strong><br><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts"><span class="hljs-symbol">request_kwargs:</span><br>    <span class="hljs-meta"># ...</span><br><span class="hljs-symbol">    proxy_url:</span> http:<span class="hljs-comment">//PROXY_HOST:PROXY_PORT/</span><br>    <span class="hljs-meta"># Optional, <span class="hljs-meta-keyword">if</span> you need authentication:</span><br><span class="hljs-symbol">    username:</span> PROXY_USER<br><span class="hljs-symbol">    password:</span> PROXY_PASS<br></code></pre></div></td></tr></table></figure><br>上面是http代理，如果需要socks5代理，需要额外的python软件包：<br><code>pip install python-telegram-bot[socks]</code><br>然后使用下面的内容：<br><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts"><span class="hljs-symbol">request_kwargs:</span><br>    <span class="hljs-meta"># ...</span><br><span class="hljs-symbol">    proxy_url:</span> socks5:<span class="hljs-comment">//URL_OF_THE_PROXY_SERVER:PROXY_PORT</span><br>    <span class="hljs-meta"># Optional, <span class="hljs-meta-keyword">if</span> you need authentication:</span><br><span class="hljs-symbol">    urllib3_proxy_kwargs:</span><br><span class="hljs-symbol">        username:</span> PROXY_USER<br><span class="hljs-symbol">        password:</span> PROXY_PASS<br></code></pre></div></td></tr></table></figure><br>到这里，所需的程序和配置文件都准备完毕，剩下的就是进程管理了。</p><h2 id="创建systemd守护进程"><a href="#创建systemd守护进程" class="headerlink" title="创建systemd守护进程"></a>创建systemd守护进程</h2><p>创建<code>/etc/systemd/system/efb@.service</code>，写入以下内容：<br><figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=EFB instance for profile %i<br><span class="hljs-attr">Documentation</span>=https://github.com/blueset/ehForwarderBot<br><span class="hljs-attr">Wants</span>=network-<span class="hljs-literal">on</span>line.target<br><span class="hljs-attr">After</span>=network-<span class="hljs-literal">on</span>line.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">PrivateTmp</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">ExecStart</span>=/usr/bin/python3 -m ehforwarderbot -p %i<br><span class="hljs-attr">Environment</span>=EFB_DATA_PATH=/etc/ehforwarderbot LANG=zh_CN.UTF-<span class="hljs-number">8</span><br><span class="hljs-attr">TimeoutStopSec</span>=<span class="hljs-number">10</span><br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-failure<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></div></td></tr></table></figure></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>使用<code>systemctl start efb@wechat</code>启动服务<br>使用<code>journalctl -u efb@wechat -e</code>查看输出，将底部的二维码链接打开并用微信扫码登录<br>使用<code>systemctl enable efb@wechat</code>设为开机自启</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>到此，整个服务就搭建完毕了，在tg上收发微信真爽，坐拥tg庞大的贴纸包，现在微信斗图没人可以斗过我（笑</p>]]></content>
    
    
    <categories>
      
      <category>服务搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ehforwarderbot(EFB)</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的Dwm配置</title>
    <link href="/ArchLinux/3c4647cb/"/>
    <url>/ArchLinux/3c4647cb/</url>
    
    <content type="html"><![CDATA[<p>列一下我使用的Dwm配置<br><span id="more"></span></p><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul><li>启动器: <a href="https://tools.suckless.org/dmenu/">dmenu</a></li><li>终端: <a href="https://st.suckless.org/">simple terminal</a></li><li>通知守护程序: <a href="https://dunst-project.org/">dunst</a></li><li>浏览器: firefox</li><li>截图: flameshot</li><li>窗口渲染(半透明): picom</li><li>锁屏: xss-lock &amp;&amp; <a href="https://tools.suckless.org/slock/">slock</a></li><li>主题设置: lxappearance</li><li>Gtk主题:<ul><li><a href="https://github.com/vinceliuice/Orchis-theme">Orchis</a></li></ul></li><li>Qt主题:<ul><li>使用<code>qt5ct</code>和<code>qt5-styleplugins</code>设置Qt主题跟随Gtk2主题</li></ul></li><li>图标主题:<ul><li><a href="https://github.com/PapirusDevelopmentTeam/papirus-icon-theme">Papirus</a></li></ul></li><li>音乐播放器: <a href="https://github.com/cmus/cmus">Cmus</a></li><li>脚本相关依赖:<ul><li>音量相关: <ul><li>alsa-utils</li><li>pamixer</li></ul></li><li>亮度相关: acpilight</li><li>壁纸设置: feh</li><li>动态壁纸: <ul><li>xwinwrap</li><li>mplayer</li></ul></li></ul></li></ul><h2 id="补丁"><a href="#补丁" class="headerlink" title="补丁"></a>补丁</h2><p>安装的补丁可以在<code>patches</code>目录下看到</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/rewrite0/</span>dwm.git<br>cd dwm<br>sudo make clean install<br></code></pre></div></td></tr></table></figure><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>设定的快捷键可以查看<code>config.h</code></p><h2 id="状态栏"><a href="#状态栏" class="headerlink" title="状态栏"></a>状态栏</h2><p>dwm的状态栏是用<a href="https://github.com/ayamir">ayamir</a>老哥现成的,做了些许修改,并加入了获取网速的脚本.<br>地址在这 -&gt; <a href="https://github.com/ayamir/dwm-dotfiles/tree/master/gruvbox/.dwm-bar">传送</a></p><h2 id="使用建议"><a href="#使用建议" class="headerlink" title="使用建议"></a>使用建议</h2><h3 id="autostart"><a href="#autostart" class="headerlink" title="autostart"></a>autostart</h3><p>启动后会自动执行<code>~/prog/dwm/scripts/autostart.sh</code>脚本,如果需要更改<code>autostart</code>脚本路径,需要到<code>dwm.c</code>修改.  </p><h3 id="快捷键-1"><a href="#快捷键-1" class="headerlink" title="快捷键"></a>快捷键</h3><p>许多快捷键的功能通过脚本实现,建议设置一个名为<code>DWMHOME</code>的环境变量,确保dwm中定义的快捷键能够触发对应的脚本.<br><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros"><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">DWMHOME</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;HOME&#125;</span>/prog/dwm/scripts&quot;</span># 设置为dwm里的scripts目录的路径<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$DWMHOME</span>:<span class="hljs-variable">$PATH</span>&quot;</span>#加入到PATH<br></code></pre></div></td></tr></table></figure></p><h3 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h3><p>壁纸脚本设定为2分钟自动切换,壁纸需放在<code>~/Pictures/wallpaper</code>目录下</p><h3 id="登录管理器"><a href="#登录管理器" class="headerlink" title="登录管理器"></a>登录管理器</h3><p>如果要使用登录管理器,需要手动创建一个<code>Desktop Entry</code><br><code>sudo vim /usr/share/xsessions/dwm.desktop</code><br><figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-section">[Desktop Entry]</span><br><span class="hljs-attr">Encoding</span>=UTF-<span class="hljs-number">8</span><br><span class="hljs-attr">Name</span>=Dwm<br><span class="hljs-attr">Comment</span>=Dynamic window manager<br><span class="hljs-attr">Exec</span>=/usr/local/bin/dwm<br><span class="hljs-attr">Type</span>=Application<br></code></pre></div></td></tr></table></figure></p><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="//cdn.jsdelivr.net/gh/Rewrite0/FigureBed@master/dwm/1.png" alt="未启动Cmus"><br><img src="//cdn.jsdelivr.net/gh/Rewrite0/FigureBed@master/dwm/2.png" alt="启动Cmus"></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>这个托盘中的图标实在是找不到办法修改,绝望.jpg<br>为了能看清楚图标,需要将背景色设置为深色.</p>]]></content>
    
    
    <categories>
      
      <category>ArchLinux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>dwm</tag>
      
      <tag>配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在dwm下使用自定义快捷键后台控制Cmus终端音乐播放器</title>
    <link href="/ArchLinux/3e798939/"/>
    <url>/ArchLinux/3e798939/</url>
    
    <content type="html"><![CDATA[<p>自从发现<a href="https://github.com/cmus/cmus">Cmus</a>这个终端下的音乐播放器后,就很少使用GUI的音乐播放器了.<br><span id="more"></span><br>通过<code>cmus-remote</code>还能远程控制,但是使用<code>cmus-remote</code>仍然需要先启动<code>Cmus</code>,否则会提示<code>cmus-remote: cmus is not running</code>.<br>而启动cmus就需要打开终端,这不就和GUI的音乐播放器差不多了嘛,这对一个懒人来说是不能忍的,那么有什么办法能在启动<code>Cmus</code>的时候给放到后台去呢?<br>答案是<strong>tmux</strong>!<br><strong>tmux</strong>是一个终端复用器,类似的还有<strong>screen</strong>等.</p><h1 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做?"></a>怎么做?</h1><p>我们先整理下思路<br>首先我们想用<code>cmus-remote</code>来控制<code>Cmus</code>,但是需要先启动<code>Cmus</code>,那么我们就需要想一个办法让<code>Cmus</code>在后台启动,因为我们不需要看它的界面操作,这个过程我们可以用<code>tmux</code>来完成.  </p><p>流程如下:  </p><ol><li>用<code>tmux</code>创建一个会话</li><li>在会话中启动<code>Cmus</code></li><li>把会话放到后台</li></ol><p>按照正常思路是行不通的,因为我们需要整个过程不可感知,完全后台操作.  </p><p>那么我们需要:  </p><ol><li>后台创建一个<code>tmux</code>会话</li><li>把命令传给这个后台会话用来启动<code>Cmus</code></li></ol><p><code>tmux</code>创建后台会话的命令如下:<br><figure class="highlight haxe"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs haxe">tmux <span class="hljs-keyword">new</span> <span class="hljs-type"></span>-s 会话名 -d<br></code></pre></div></td></tr></table></figure><br><code>tmux</code>传递命令的命令如下:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs livecodeserver">tmux <span class="hljs-built_in">send</span>-<span class="hljs-built_in">keys</span> -t 会话名 <span class="hljs-string">&quot;传递的命令&quot;</span><br></code></pre></div></td></tr></table></figure><br>那么整个过程写到脚本里就是两行代码:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs livecodeserver">tmux <span class="hljs-built_in">new</span> -s cmus -d<span class="hljs-comment"># 创建一个名为cmus的tmux会话</span><br>tmux <span class="hljs-built_in">send</span>-<span class="hljs-built_in">keys</span> -t cmus <span class="hljs-string">&quot;cmus&quot;</span> C-m<span class="hljs-comment"># 向名为cmus的tmux会话发送cmus命令并回车</span><br><br><span class="hljs-comment"># 注意发送的命令如果需要回车执行, 需要在后面加一个 C-m ,表示一个回车</span><br></code></pre></div></td></tr></table></figure><br>启动后自然需要播放,那么我们可以在启动后再用<code>cmus-remote</code>控制<code>Cmus</code>播放就行:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs livecodeserver">tmux <span class="hljs-built_in">new</span> -s cmus -d<br>tmux <span class="hljs-built_in">send</span>-<span class="hljs-built_in">keys</span> -t cmus <span class="hljs-string">&quot;cmus&quot;</span> C-m<br>sleep <span class="hljs-number">1</span>s<br>cmus-remote <span class="hljs-comment">--play</span><br></code></pre></div></td></tr></table></figure><br>这里加<code>sleep</code>是为了防止cmus还没有启动完,<code>cmus-remote</code>就执行了,导致音乐没有播放.</p><p>能启动了自然要能关闭,这里就直接上代码:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs livecodeserver">tmux <span class="hljs-built_in">send</span>-<span class="hljs-built_in">keys</span> -t cmus <span class="hljs-string">&quot;cqy&quot;</span><span class="hljs-comment">#向名为cmus的tmux会话发送cqy用来退出cmus</span><br><span class="hljs-comment"># c代表暂停,q代表退出,y是确认, 因为不需要回车所以不用加 C-m</span><br>tmux <span class="hljs-built_in">kill</span>-session -t cmus<span class="hljs-comment">#干掉名为cmus的tmux会话</span><br></code></pre></div></td></tr></table></figure><br>当然也可以简单粗暴的直接干掉<code>tmux</code>会话…</p><h1 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h1><p>把上面两个部分写成函数,同时用if判断传入的参数就可以决定触发哪个了,成品如下:<br><figure class="highlight perl"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs perl">play() &#123;<br>  tmux new -s cmus -d<br>  tmux <span class="hljs-keyword">send</span>-<span class="hljs-keyword">keys</span> -t cmus <span class="hljs-string">&quot;cmus&quot;</span> C-m<br>  <span class="hljs-keyword">sleep</span> <span class="hljs-number">1</span>s<br>  cmus-remote --play<br>&#125;<br><br>quit() &#123;<br>  tmux <span class="hljs-keyword">send</span>-<span class="hljs-keyword">keys</span> -t cmus <span class="hljs-string">&quot;cqy&quot;</span><br>  tmux <span class="hljs-keyword">kill</span>-session -t cmus<br>&#125;<br><br><span class="hljs-keyword">if</span> [ $1 == <span class="hljs-string">&quot;play&quot;</span> ];then<br>  play<br>elif [ $1 == <span class="hljs-string">&quot;quit&quot;</span> ];then<br>  quit<br><span class="hljs-keyword">else</span><br>  echo <span class="hljs-string">&quot;指令错误!&quot;</span><br>fi<br></code></pre></div></td></tr></table></figure></p><h1 id="cmus-remote命令"><a href="#cmus-remote命令" class="headerlink" title="cmus-remote命令"></a>cmus-remote命令</h1><p>用<code>cmus-remote --help</code>可以查看帮助, 或者直接<code>man</code>也可以.<br>这里列一些常用的命令:<br><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript"><span class="hljs-comment"># 播放</span><br>cmus-remote <span class="hljs-comment">--play</span><br>或<br>cmus-remote -p<br><span class="hljs-comment"># 暂停</span><br>cmus-remote <span class="hljs-comment">--pause</span><br>或<br>cmus-remote <span class="hljs-comment">--u</span><br><span class="hljs-comment"># 上一首</span><br>cmus-remote <span class="hljs-comment">--prev</span><br>或<br>cmus-remote -r<br><span class="hljs-comment"># 下一首</span><br>cmus-remote <span class="hljs-comment">--next</span><br>或<br>cmus-remote -n<br></code></pre></div></td></tr></table></figure></p><h1 id="dwm按键绑定"><a href="#dwm按键绑定" class="headerlink" title="dwm按键绑定"></a>dwm按键绑定</h1><p>用dwm的应该都会,我就不水了,有兴趣可以看看我的dwm -&gt; <a href="https://github.com/Rewrite0/dwm">传送</a></p>]]></content>
    
    
    <categories>
      
      <category>ArchLinux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Cmus</tag>
      
      <tag>tmux</tag>
      
      <tag>dwm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>st终端下使用ranger的图片预览</title>
    <link href="/ArchLinux/690074e9/"/>
    <url>/ArchLinux/690074e9/</url>
    
    <content type="html"><![CDATA[<blockquote><p>在st终端下使用ranger预览图片<br><span id="more"></span></p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>使用st终端开启ranger的图片预览却没有图片显示<br>但是在xterm下却没有问题，这让我怀疑是否是st的问题，毕竟它<del>太小了</del>太简洁了<br>于是我在ranger的github下找到了这个<a href="https://github.com/ranger/ranger/issues/1474">issues</a>  </p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>上面issues里的老哥和我问题一样，w3m预览方式无法使用,最后换用<code>ueberzug</code>的预览方式成功预览图片.<br>那么问题就很好解决了，安装<code>ueberzug</code>后，修改rc.conf,将<code>preview_images_method</code>设置为<code>ueberzug</code>就可以了.  </p><h1 id="安装ueberzug"><a href="#安装ueberzug" class="headerlink" title="安装ueberzug"></a>安装ueberzug</h1><p><del>安装ueberzug的方法很简单，我用的是archlinux，所以aur仓库里就有我需要的<code>ueberzug</code></del><br><del>不过aur仓库里有两个，一个是<code>python-ueberzug</code>,一个是<code>python-ueberzug-git</code></del><br><del>根据老哥的踩坑经历，第一个会有问题，所以这里我安装的第二个</del><br><del><code>yay -S python-ueberzug-git</code></del>  </p><blockquote><p>某个版本更新后预览出现问题,卸载后重新安装官方仓库里的<code>ueberzug</code>可以解决.  </p></blockquote><p><code>sudo pacman -S ueberzug</code><br>其余发行版可以通过pip安装<br><code>sudo pip3 install ueberzug</code></p><h2 id="预览图"><a href="#预览图" class="headerlink" title="预览图"></a>预览图</h2><p>一时预览一时爽，一直预览一直爽！<br><img src="https://cdn.jsdelivr.net/gh/Rewrite0/FigureBed@master/1/2020-06-29_15-28.png" alt="图1"><br><img src="https://cdn.jsdelivr.net/gh/Rewrite0/FigureBed@master/1/2020-06-29_15-29.png" alt="图2"></p>]]></content>
    
    
    <categories>
      
      <category>ArchLinux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>st</tag>
      
      <tag>ranger</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown基础语法</title>
    <link href="/%E7%AC%94%E8%AE%B0/5c98fe12/"/>
    <url>/%E7%AC%94%E8%AE%B0/5c98fe12/</url>
    
    <content type="html"><![CDATA[<blockquote><p>记录一下Markdown的基础语法<br><span id="more"></span></p></blockquote><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>在想要设为标题的文字前加<code>#</code>来表示.<br>一个<code>#</code>是一级标题,两个<code>#</code>是二级标题,以此类推. 一共支持六级标题<br>示例:<br><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean"># 这是一级标题<br>## 这是二级标题<br>### 这是三级标题<br>#### 这是四级标题<br>##### 这是五级标题<br>###### 这是六级标题<br><br>注意要和内容之间要有一个空格<br></code></pre></div></td></tr></table></figure><br>效果如下:</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><ul><li><p>斜体<br>在需要倾斜的字用一个<code>*</code>包裹起来<br>示例:<code>*斜体*</code> 效果: <em>斜体</em></p></li><li><p>加粗<br>在需要加粗的字用两个<code>*</code>包裹起来<br>示例:<code>**加粗**</code> 效果: <em>加粗</em></p></li><li><p>斜体加粗<br>在需要倾斜加粗的字用三个<code>*</code>包裹起来<br>示例:<code>***斜体加粗***</code> 效果: <strong><em>斜体加粗</em></strong></p></li><li><p>删除线<br>在需要加删除线的字用<code>~~</code>包裹起来<br>示例:<code>~~删除线~~</code> 效果: <del>删除线</del></p></li></ul><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;n个 <del>无限套娃</del><br>示例:<br><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">&gt;</span><span class="bash"> 这是引用的内容</span><br><span class="hljs-meta">&gt;</span><span class="bash">&gt; 这是引用的内容</span><br><span class="hljs-meta">&gt;</span><span class="bash">&gt;&gt; 这是引用的内容</span><br></code></pre></div></td></tr></table></figure><br>效果:  </p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>三个或以上的<code>-</code>或者<code>*</code>都可以.<br>示例:<br><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc"><span class="hljs-section">---</span><br><span class="hljs-section">----</span><br><span class="hljs-bullet">***</span><br><span class="hljs-bullet"></span><span class="hljs-strong">***</span>*<br></code></pre></div></td></tr></table></figure></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果:"></a>效果:</h2><hr><hr><hr><p>可以看到效果都一样,选一个自己喜欢的方式就行,个人比较喜欢用四个<code>-</code>的写法</p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>语法:<br><code>![图片描述](图片链接)</code><br>示例:<br><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">![图片描述](https:<span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>Rewrite0<span class="hljs-regexp">/FigureBed@master/img</span><span class="hljs-regexp">/5.png)</span><br></code></pre></div></td></tr></table></figure><br>效果:<br><img src="https://cdn.jsdelivr.net/gh/Rewrite0/FigureBed@master/img/5.png" alt="图片描述"></p><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><p>和图片类似,去掉前面的<code>!</code>就行<br>语法:<br><code>[超链接描述](超链接地址)</code><br>示例:<br><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-attr">[百度]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//baidu.com)</span><br></code></pre></div></td></tr></table></figure><br>效果:<br><a href="https://baidu.com">百度</a>  </p><p><strong>注意: Markdown本身不支持在新窗口打开超链接,不过Markdown支持html语法,如果需要,可以用html语法代替</strong><br>示例:<br><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;https://baidu.com&quot;</span> <span class="hljs-attribute">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;百度&lt;/a&gt;<br></code></pre></div></td></tr></table></figure><br>效果:<br><a href="https://baidu.com" target="_blank">百度</a></p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>在内容前加<code>-</code> <code>+</code> <code>*</code>中的任意一种都可以<br>示例:<br><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown"><span class="hljs-bullet">-</span> 列表<br><span class="hljs-bullet">+</span> 列表<br><span class="hljs-bullet">*</span> 列表<br><br>注意要和内容之间要有一个空格<br></code></pre></div></td></tr></table></figure><br>效果:  </p><ul><li>列表</li></ul><ul><li>列表</li></ul><ul><li>列表</li></ul><blockquote><p>可见效果一样,和分割线相同,选一个自己喜欢的方式就行</p></blockquote><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>在内容前加上数字加点<br>示例:<br><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 列表内容<br><span class="hljs-bullet">2.</span> 列表内容<br><span class="hljs-bullet">3.</span> 列表内容<br><br>注意：序号跟内容之间要有空格<br></code></pre></div></td></tr></table></figure><br>效果:  </p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><h2 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h2><p>在子集列表前加三个空格<br>示例:<br><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown"><span class="hljs-bullet">-</span> 一级<br><span class="hljs-strong">__<span class="hljs-emphasis">_- 二级</span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-strong">__<span class="hljs-emphasis">_- 二级</span></span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-strong">____</span><span class="hljs-strong">__- 三级</span></span></span></span></span><br><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong">__</span><span class="hljs-strong">____</span><span class="hljs-strong">__<span class="hljs-emphasis">_- 四级</span></span></span></span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"></span></span></span></span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong">示例中用下划线 _</span> 来代替空格,方便观察</span></span></span></span></span><br></code></pre></div></td></tr></table></figure><br>效果:  </p><ul><li>一级<ul><li>二级</li><li>二级<ul><li>三级<ul><li>四级  </li></ul></li></ul></li></ul></li></ul><p><strong>同时有序列表和无序列表也是可以相互嵌套的</strong>  </p><p>示例:  </p><ul><li>无序<ol><li>有序<ol><li>有序</li></ol></li></ol><ul><li>无序</li></ul></li></ul><ol><li>有序<ul><li>无序</li><li>无序</li></ul></li></ol><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>语法:<br><figure class="highlight gherkin"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gherkin">|<span class="hljs-string">表头</span>|<span class="hljs-string">表头</span>|<span class="hljs-string">表头</span>|<br>|<span class="hljs-string">----</span>|<span class="hljs-string">:--:</span>|<span class="hljs-string">---:</span>|<br>|<span class="hljs-string">内容</span>|<span class="hljs-string">内容</span>|<span class="hljs-string">内容</span>|<br>|<span class="hljs-string">内容</span>|<span class="hljs-string">内容</span>|<span class="hljs-string">内容</span>|<br><br>第二行分割表头和内容。<br>- 有一个就行，多加几个方便对齐<br>文字默认居左<br>-两边加：表示文字居中<br>-右边加：表示文字居右<br><br>注：表格两边的|<span class="hljs-string">可以省略</span><br><span class="hljs-string"></span><br><span class="hljs-string">即:</span><br><span class="hljs-string">表头</span>|<span class="hljs-string">表头</span>|<span class="hljs-string">表头</span><br><span class="hljs-string">----</span>|<span class="hljs-string">:--:</span>|<span class="hljs-string">---:</span><br><span class="hljs-string">内容</span>|<span class="hljs-string">内容</span>|<span class="hljs-string">内容</span><br><span class="hljs-string">内容</span>|<span class="hljs-string">内容</span>|<span class="hljs-string">内容</span><br></code></pre></div></td></tr></table></figure><br>示例:<br><figure class="highlight elixir"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs elixir">左对齐|右对齐|居中对齐<br><span class="hljs-symbol">:-----|-----</span><span class="hljs-symbol">:|</span><span class="hljs-symbol">:------</span>:<br>  内容| 内容 |  内容<br>  内容| 内容 |  内容<br></code></pre></div></td></tr></table></figure><br>效果:</p><div class="table-container"><table><thead><tr><th style="text-align:left">左对齐</th><th style="text-align:right">右对齐</th><th style="text-align:center">居中对齐</th></tr></thead><tbody><tr><td style="text-align:left">  内容</td><td style="text-align:right">内容</td><td style="text-align:center">内容</td></tr><tr><td style="text-align:left">  内容</td><td style="text-align:right">内容</td><td style="text-align:center">内容</td></tr></tbody></table></div><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>语法:<br>单行代码: 代码用反引号包裹<br><figure class="highlight arcade"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arcade"><span class="hljs-string">`代码`</span><br></code></pre></div></td></tr></table></figure><br>代码块: 代码用三个反引号包裹,且反引号单独占一行<br><figure class="highlight autohotkey"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs autohotkey">(```)<br>代码...<br>代码...<br>(```)<br><br>这里为了防止被判断为代码块,所以用括号包裹了,使用时无需括号<br></code></pre></div></td></tr></table></figure></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo使用笔记</title>
    <link href="/%E7%AC%94%E8%AE%B0/d6ed9cc7/"/>
    <url>/%E7%AC%94%E8%AE%B0/d6ed9cc7/</url>
    
    <content type="html"><![CDATA[<p>记录下hexo基本命令<br><span id="more"></span></p><h1 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h1><figure class="highlight vala"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs vala"><span class="hljs-meta">#全局方式安装hexo</span><br>npm install hexo-cli -g<br><span class="hljs-meta">#升级</span><br>npm update hexo-cli -g<br><span class="hljs-meta">#初始化</span><br>npm init<br><span class="hljs-meta">#查看版本</span><br>hexo version<br></code></pre></div></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight vala"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs vala"><span class="hljs-meta">#新建文章</span><br>hexo n <span class="hljs-string">&#x27;title&#x27;</span><br><span class="hljs-meta">#新建草稿</span><br>hexo n draft <span class="hljs-string">&#x27;title&#x27;</span><br><span class="hljs-meta">#新建一个独立页面</span><br>hexo n page <span class="hljs-string">&#x27;title&#x27;</span><br><span class="hljs-meta">#发布草稿</span><br>hexo publish [layout] &lt;filename&gt;<br><span class="hljs-meta">#清楚缓存文件和静态文件</span><br>hexo clean<br><span class="hljs-meta">#生成静态文件</span><br>hexo g<br><span class="hljs-meta">#启动预览服务</span><br>hexo s<br><span class="hljs-meta">#部署</span><br>hexo d<br></code></pre></div></td></tr></table></figure><p>文章发布需要先使用<code>hexo g</code>,再使用<code>hexo d</code>,可以简写为<code>hexo g -d</code></p><blockquote><p>虽然没有要求,但还是建议每次生成部署前都使用一次<strong>hexo clean</strong>减少<del>蜜汁</del>迷之错误发生<br>可以将这几个命令组合起来<code>hexo clean &amp;&amp; hexo g -d</code></p></blockquote><h1 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h1><p>一般<del>开坑</del>写文章都是从草稿开始，在发布或者预览的时候,草稿是不会显示的,这时候可以用<code>hexo s</code>预览的时候加上<code>--draft</code>来显示草稿,满意了就可以发布了</p><h1 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h1><p>在使用<code>hexo n</code>生成文章后,md文件头部会有类似以下的信息<br><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">test</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2020-03-15 20:06:32</span><br><span class="hljs-attr">coments:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-meta">---</span><br></code></pre></div></td></tr></table></figure><br>其中<code>comments: true</code>是开启评论,使用主题的话会提到<br><code>categories:</code>是设置文章分类,用以下方式设置<br><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc">categories:<br><span class="hljs-bullet">- </span>分类1<br><span class="hljs-bullet">- </span>分类2<br></code></pre></div></td></tr></table></figure><br>tags同理</p><p>想更改默认生成的样式,可以在scaffolds文件夹下修改对应的md文件</p><p> 文章摘要<br>在<code>&lt;!--more--&gt;</code>以上的为文章摘要</p><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><p>再分享一下我用的插件吧<br><figure class="highlight mipsasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mipsasm"><span class="hljs-comment">#git部署插件</span><br>npm <span class="hljs-keyword">install </span>hexo-deployer-git --save<br><span class="hljs-comment">#备份插件 </span><br>npm <span class="hljs-keyword">install </span>hexo-git-<span class="hljs-keyword">backup </span>--save<br><span class="hljs-comment">#Rss</span><br>npm <span class="hljs-keyword">install </span>hexo-generator-feed<br><span class="hljs-comment">#addlink</span><br>npm <span class="hljs-keyword">install </span>hexo-abbrlink --save<br><span class="hljs-comment">#压缩</span><br>npm <span class="hljs-keyword">install </span>hexo-all-minifier --save<br><span class="hljs-comment">#渲染器</span><br>npm <span class="hljs-keyword">install </span>hexo-renderer-sass --save<br><span class="hljs-comment">#站点地图</span><br>npm <span class="hljs-keyword">install </span>hexo-generator-<span class="hljs-keyword">baidu-sitemap </span>--save<br>npm <span class="hljs-keyword">install </span>hexo-generator-sitemap --save<br></code></pre></div></td></tr></table></figure><br>插件的配置就就自行百度吧(笑)</p><p>如果在用<code>hexo s</code>预览的时候出现<code>Cannot GET /</code>的字样,就把下面几个也装上<br><figure class="highlight ada"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ada">npm install hexo-renderer-ejs <span class="hljs-comment">--save</span><br>npm install hexo-renderer-stylus <span class="hljs-comment">--save</span><br>npm install hexo-renderer-marked <span class="hljs-comment">--save</span><br></code></pre></div></td></tr></table></figure></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
